{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rafrausin/curso/semana_imersao_celke/site/pages/contato.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Head from \"next/head\";\nimport { Container, Jumbotron, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport Menu from \"../components/Menu\";\nimport Rodape from \"../components/Rodape\";\n\nfunction Home() {\n  const {\n    0: contato,\n    1: setContato\n  } = useState({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    content: \"\"\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  const onChangeInput = e => setContato(_objectSpread(_objectSpread({}, contato), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const sendMsg = async e => {\n    e.preventDefault();\n    setResponse({\n      formSave: true\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:8080/contato\", {\n        method: \"POST\",\n        body: JSON.stringify(contato),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const responseEnv = await res.json();\n\n      if (responseEnv.error) {\n        setResponse({\n          formSave: false,\n          type: 'error',\n          message: responseEnv.message\n        });\n      } else {\n        setResponse({\n          formSave: false,\n          type: 'success',\n          message: responseEnv.message\n        });\n      }\n    } catch (err) {\n      setResponse({\n        formSave: false,\n        type: 'error',\n        message: 'Error: Mensagem n√£o enviada com sucesso, tente mais tarde!'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Contato - Celke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Contato com a empresa...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"descr-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: `.descr-top{\n              background-color: #000;\n              color: #fed136;\n              padding-top: 100px;\n              padding-bottom: 50;\n              margin-bottom: 0rem !important;\n\n            }\n            `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4\",\n          children: \"Contato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"form-contato\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: `.form-contato{\n              padding-top: 80px;\n              padding-bottom: 80px;\n              background-color: #fff;\n              margin-bottom: 0rem !important\n            }`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [response.type === \"error\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          children: [response.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this) : \"\", response.type === \"success\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          children: [response.message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: sendMsg,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Nome completo\",\n              onChangeInput: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"email\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"Melhor e-mail\",\n              onChangeInput: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"subject\",\n              children: \"Assunto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"subject\",\n              id: \"subject\",\n              placeholder: \"Assunto da mensagem\",\n              onChangeInput: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"content\",\n              children: \"Conte\\xFAdo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"content\",\n              id: \"content\",\n              placeholder: \"Conte\\xFAdo da mensagem\",\n              onChangeInput: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            outline: true,\n            color: \"warning\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Rodape, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n;\nexport default Home;","map":{"version":3,"sources":["/Users/rafrausin/curso/semana_imersao_celke/site/pages/contato.js"],"names":["React","useState","Head","Container","Jumbotron","Form","FormGroup","Label","Input","Button","Menu","Rodape","Home","contato","setContato","name","email","subject","content","response","setResponse","formSave","type","message","onChangeInput","e","target","value","sendMsg","preventDefault","res","fetch","method","body","JSON","stringify","headers","responseEnv","json","error","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Head from \"next/head\";\n\nimport { Container, Jumbotron, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\n\nimport Menu from \"../components/Menu\";\nimport Rodape from \"../components/Rodape\";\n\nfunction Home() {\n\n  const [contato, setContato] = useState({\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    content: \"\"\n\n  });\n\n  const [response, setResponse] = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  const onChangeInput = e => setContato({ ...contato, [e.target.name]: e.target.value });\n\n  const sendMsg = async e => {\n    e.preventDefault();\n\n    setResponse({formSave: true})\n    try {\n      const res = await fetch(\"http://localhost:8080/contato\", {\n        method: \"POST\",\n        body: JSON.stringify(contato),\n        headers: { \"Content-Type\": \"application/json\" }\n      });\n\n      const responseEnv = await res.json();\n      if (responseEnv.error) {\n          setResponse({\n            formSave: false,\n            type: 'error',\n            message: responseEnv.message\n        });\n      } else {\n          setResponse({\n              formSave: false,\n              type: 'success',\n              message: responseEnv.message\n        });\n      }\n    } catch (err) {\n        setResponse({\n          formSave: false,\n          type: 'error',\n          message: 'Error: Mensagem n√£o enviada com sucesso, tente mais tarde!'\n      });\n    }\n  }\n    return (\n      <>\n        <Head>\n          <title>Contato - Celke</title>\n          <meta name=\"description\" content=\"Contato com a empresa...\" />\n        </Head>\n\n        <Menu />\n\n        <Jumbotron fluid className=\"descr-top\">\n          <style>\n            {`.descr-top{\n              background-color: #000;\n              color: #fed136;\n              padding-top: 100px;\n              padding-bottom: 50;\n              margin-bottom: 0rem !important;\n\n            }\n            `}\n          </style>\n          <Container className=\"text-center\">\n            <h1 className=\"display-4\">Contato</h1>\n          </Container>\n        </Jumbotron>\n\n        <Jumbotron fluid className=\"form-contato\">\n          <style>\n            {`.form-contato{\n              padding-top: 80px;\n              padding-bottom: 80px;\n              background-color: #fff;\n              margin-bottom: 0rem !important\n            }`}\n          </style>\n          <Container>\n            {response.type === \"error\" ? (\n              <div className=\"alert alert-danger\">{response.message} </div>\n            ) : (\n              \"\"\n            )}\n            {response.type === \"success\" ? (\n              <div className=\"alert alert-success\">{response.message} </div>\n            ) : (\n              \"\"\n            )}\n            <Form onSubmit={sendMsg}>\n              <FormGroup>\n                <Label for=\"name\">Nome</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Nome completo\"\n                  onChangeInput={onChangeInput}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label for=\"email\">E-mail</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Melhor e-mail\"\n                  onChangeInput={onChangeInput}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label for=\"subject\">Assunto</Label>\n                <Input\n                  type=\"text\"\n                  name=\"subject\"\n                  id=\"subject\"\n                  placeholder=\"Assunto da mensagem\"\n                  onChangeInput={onChangeInput}\n                />\n              </FormGroup>\n\n              <FormGroup>\n                <Label for=\"content\">Conte√∫do</Label>\n                <Input\n                  type=\"text\"\n                  name=\"content\"\n                  id=\"content\"\n                  placeholder=\"Conte√∫do da mensagem\"\n                  onChangeInput={onChangeInput}\n                />\n              </FormGroup>\n\n              <Button type=\"submit\" outline color=\"warning\">\n                Enviar\n              </Button>\n            </Form>\n          </Container>\n        </Jumbotron>\n\n        <Rodape />\n      </>\n    );\n  };\n\n  export default Home;\n"]},"metadata":{},"sourceType":"module"}